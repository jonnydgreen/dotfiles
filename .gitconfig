[credential]
	helper = osxkeychain

[core]
	excludesfile = ~/.gitignore
  	editor = vim
	autocrlf = input
	longpaths = true

[init]
  defaultBranch = main

[pull]
	ff = only

[difftool "sourcetree"]
	cmd = opendiff \"$LOCAL\" \"$REMOTE\"
	path =
	prompt = false

[mergetool "sourcetree"]
	cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
	trustExitCode = true

[commit]
	template = ~/.stCommitMsg

[alias]
	st = status
	co = checkout
	glog = log --color --graph --all --decorate=full
	pl = pull
	ph = push
	out = !git log origin/master..HEAD
	pushb = !git push --set-upstream origin $(git rev-parse --abbrev-ref HEAD)
	pp = !git pushb
	repository-name = !sh -c 'basename -s .git $(git config --get remote.origin.url)'
	lab = !sh -c '\"/c/Program Files/Mozilla Firefox/firefox.exe\" $(git remote get-url origin | sed \"s|\\.git||g\" | sed \"s|:|/|g\" | sed \"s|git@|https://|g\")\"/commits/\"$(git rev-parse --abbrev-ref HEAD)'
	hub = !sh -c '\"/c/Program Files/Mozilla Firefox/firefox.exe\" https://github.com/Unity-Technologies/$(git repository-name)/tree/$(git rev-parse --abbrev-ref HEAD)'
	changes=!sh -c 'LAST_TAG=`git describe --abbrev=0 --tags` && git log --date=short --pretty=format:\"%ad %h %s\" $LAST_TAG..'
	name=!sh -c
	prn=!sh -c 'git checkout master && git pull && git remote prune origin && git branch --format=\"%(if:equals=gone)%(upstream:track,nobracket)%(then)%(refname:short)%(end)\" | grep \".\" | xargs git branch -D'
        pruneb=!sh -c 'git checkout master && git pull && git remote prune origin && git branch --format=\"%(if:equals=gone)%(upstream:track,nobracket)%(then)%(refname:short)%(end)\" | grep \".\" | xargs git branch -D'
	pruneb-main=!sh -c 'git checkout main && git pull && git remote prune origin && git branch --format=\"%(if:equals=gone)%(upstream:track,nobracket)%(then)%(refname:short)%(end)\" | grep \".\" | xargs git branch -D'
	feat=!sh -c 'gh pr create -l feature'
	bug=!sh -c 'gh pr create -l bug'
	release=!sh -c 'gh pr create -l release'
        sync-fork=!sh -c 'git fetch upstream && git checkout master && git merge upstream/master'
        sync-fork-main=!sh -c 'git fetch upstream && git checkout main && git merge upstream/main'

[apply]
	whitespace = nowarn

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[diff]
	renameLimit=3000
[diff "sopsdiffer"]
	textconv = sops -d
